macro(mk_download_deps _all_deps)
  if(${MK_DOWNLOAD_DEPS})
    if(${MSVC})
      if("${CMAKE_SIZEOF_VOID_P}" EQUAL 8)
        set(_arch x64)
      elseif("${CMAKE_SIZEOF_VOID_P}" EQUAL 4)
        set(_arch x86)
      else()
        message(FATAL_ERROR "Unknown architecture")
      endif()
      foreach(_dep ${_all_deps})
        set(_baseurl "https://github.com/measurement-kit/prebuilt/releases/download")
        set(_channel "testing")
        set(_os "windows")
        if("${_dep}" STREQUAL "LIBRESSL")
          set(_name "libressl")
          set(_version "2.6.4-4")
          set(_hash "01dd963ccd4e327206591acec5d21284e4ef30f1b4115d5396ee925ec9740258")
        elseif("${_dep}" STREQUAL "LIBEVENT")
          set(_name "libevent")
          set(_version "2.1.8-4")
          set(_hash "0e1d22d7f81deece1c20752f4a301587e7a6253eb51e0cc3e07654e21aa48af1")
        else()
          message(FATAL_ERROR "Unknown dependency: ${_dep}")
        endif()
        set(_url "${_baseurl}/${_channel}/${_os}-${_name}-${_version}.tar.gz")
        message(STATUS "Downloading precompiled ${_name}: ${url}")
        file(DOWNLOAD "${_url}"
             "${CMAKE_CURRENT_BINARY_DIR}/${_name}-prebuilt.tar.gz"
             EXPECTED_HASH SHA256=${_hash}
             TLS_VERIFY ON SHOW_PROGRESS)
        execute_process(
          COMMAND ${CMAKE_COMMAND} -E tar -xf "${_name}-prebuilt.tar.gz"
          WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}"
          RESULT_VARIABLE _tar_failure)
        if("${_tar_failure}")
          message(FATAL_ERROR "Cannot unpack dependency: ${_tar_failure}")
        endif()
        list(APPEND CMAKE_REQUIRED_INCLUDES "${CMAKE_CURRENT_BINARY_DIR}/MK_DIST/${_os}/${_name}/${_version}/${_arch}/include")
        list(APPEND CMAKE_LIBRARY_PATH "${CMAKE_CURRENT_BINARY_DIR}/MK_DIST/${_os}/${_name}/${_version}/${_arch}/lib")
      endforeach()
    else()
      message(FATAL_ERROR "No dependencies for platform")
    endif()
  endif()
endmacro()
